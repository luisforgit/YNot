import React, { useState } from 'react';
import { View, StyleSheet } from 'react-native';
import { Button, TextInput, Title,Snackbar } from 'react-native-paper';
import { auth, database as db } from '../firebaseConfig';

export default function AuthScreen() {
  const [email, setEmail] = useState('');
  const [pass, setPass] = useState('');
  const [newPass, setNewPass] = useState('');
  const [mode, setMode] = useState('login'); // login | register | change
  const [error,setError] = useState('');
  
  const showError = (e) => setError(e.message || e.toString);
  const handleLogin = () => auth.signInWithEmailAndPassword(email, pass);
  const handleRegister = () => auth.createUserWithEmailAndPassword(email, pass);
  const handleChange = () => auth.currentUser.updatePassword(newPass);

  return (
    <View style={styles.container}>
      <Title>yNote</Title>

      <TextInput
        label="Email"
        value={email}
        onChangeText={setEmail}
        autoCapitalize="none"
        style={styles.input}
      />
      {(mode === 'login' || mode === 'register') && (
        <TextInput
          label="Password"
          value={pass}
          onChangeText={setPass}
          secureTextEntry
          style={styles.input}
        />
      )}
      {mode === 'change' && (
        <TextInput
          label="New password"
          value={newPass}
          onChangeText={setNewPass}
          secureTextEntry
          style={styles.input}
        />
      )}

      {mode === 'login' && (
        <>
          <Button mode="contained" onPress={handleLogin}>Login</Button>
          <Button onPress={() => setMode('register')}>No account? Register</Button>
          <Button onPress={() => setMode('change')}>Change password</Button>
        </>
      )}
      {mode === 'register' && (
        <>
          <Button mode="contained" onPress={handleRegister}>Create account</Button>
          <Button onPress={() => setMode('login')}>Back to login</Button>
        </>
      )}
      {mode === 'change' && (
        <>
          <Button mode="contained" onPress={handleChange}>Update password</Button>
          <Button onPress={() => setMode('login')}>Back</Button>
        </>
      )}
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, justifyContent: 'center', padding: 16 },
  input: { marginBottom: 12 },
});